name: Create Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build_and_release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller

    - name: Set PyInstaller data separator
      id: set_separator
      run: |
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          echo "separator=;" >> $GITHUB_OUTPUT
        else
          echo "separator=:" >> $GITHUB_OUTPUT
        fi

    - name: Build with PyInstaller
      run: >
        pyinstaller
        --name "File Organizer Pro"
        --onefile
        --windowed
        --add-data "assets${{ steps.set_separator.outputs.separator }}assets"
        organizer.py

    - name: Prepare artifact for Windows
      if: matrix.os == 'windows-latest'
      run: |
        Compress-Archive -Path dist/"File Organizer Pro.exe" -DestinationPath "File-Organizer-Pro-Windows.zip"
      shell: pwsh

    - name: Prepare artifact for Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        zip "File-Organizer-Pro-Linux.zip" dist/"File Organizer Pro"

    - name: Prepare artifact for macOS
      if: matrix.os == 'macos-latest'
      run: |
        zip -r "File-Organizer-Pro-macOS.zip" "dist/File Organizer Pro.app"

    - name: Create Release and Upload Assets
      uses: softprops/action-gh-release@v1
      with:
        files: |
          File-Organizer-Pro-Windows.zip
          File-Organizer-Pro-Linux.zip
          File-Organizer-Pro-macOS.zip
        draft: true
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}